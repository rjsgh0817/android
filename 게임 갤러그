//MainActivity.java
package com.example.hello;

import android.graphics.Point;
import android.os.Bundle;
import android.view.Display;

import androidx.appcompat.app.AppCompatActivity;


public class MainActivity extends AppCompatActivity {


    SpaceInvadersView spaceInvadersView;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        Display display=getWindowManager().getDefaultDisplay();
        Point size=new Point();
        display.getSize(size);
        spaceInvadersView=new SpaceInvadersView(this,size.x,size.y);
        setContentView(spaceInvadersView);

    }
    public void onResume()
    {
        super.onResume();
        spaceInvadersView.resume();
    }
    public void onPause()
    {
        super.onPause();
        spaceInvadersView.pause();
    }


}

//===========================================================================

//Sprite.java
package com.example.hello;

import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Canvas;
import android.graphics.Paint;
import android.graphics.RectF;

public class Sprite {
    int x,y;
    int width,height;
    int dx,dy;
    Bitmap bitmap;
    int id;
    RectF rect;

    public Sprite(Context context,int id,int x,int y)
    {
        this.id=id;
        this.x=x;
        this.y=y;
        bitmap= BitmapFactory.decodeResource(context.getResources(),id);
        width=bitmap.getWidth();
        height=bitmap.getHeight();
        rect=new RectF();
        
    }

    public int getWidth(){return bitmap.getWidth();}
    public int getHeight(){return bitmap.getHeight();}

    public void draw(Canvas g, Paint p)
    {
        g.drawBitmap(bitmap,x,y,p);
    }

    public void move()
    {
        x+=dx;
        y+=dy;
        rect.left=x;
        rect.right=x+width;
        rect.top=y;
        rect.bottom=y+height;
    }
    public void setDx(int dx){this.dx=dx;}
    public void setDy(int dy){this.dy=dy;}
    public int getDx(){return dx; }
    public int getDy(){return dy;}
    public int getX(){return x;}
    public int getY(){return y; }

    public RectF getRect() {
        return rect;
    }

    public boolean checkCollision(Sprite other)
    {
        return RectF.intersects(this.getRect(),other.getRect());
    }
    public void handleCollision(Sprite other)
    {

    }
}

//===========================================================================

//StarShipSprite.java
package com.example.hello;

import android.content.Context;
import android.graphics.RectF;

public class StarShipSprite extends  Sprite {

    RectF rect;
    SpaceInvadersView game;

    public StarShipSprite(Context context,SpaceInvadersView game,int x,int y)
    {
        super(context,R.drawable.starship,x,y);//starship
        this.game=game;
        dx=0;
        dy=0;
    }
    public void move()
    {
        if((dx<0)&&(x<10))
        {
            return;
        }
        if((dx>0)&&(x>800))
        {
            return;
        }
        super.move();
    }
    public void handleCollision(Sprite other)
    {
        if(other instanceof AlienSprite)
        {
            game.endGame();
        }
    }

}

//===========================================================================

//AlienSprite.java
package com.example.hello;

import android.content.Context;

public class AlienSprite  extends Sprite{
    SpaceInvadersView game;

    public AlienSprite(Context context,SpaceInvadersView game,int x,int y)
    {
        super(context,R.drawable.alien,x,y);//alien
        this.game=game;
        dx=-3;
    }
    public void move()
    {
        if((dx<0)&&(x<10)||((dx>0)&&(x>800)))
        {
            dx=-dx;
            y+=80;
            if(y>600)
            {
                game.endGame();
            }
        }
        super.move();
    }
}


//===========================================================================

//ShotSprite.java
package com.example.hello;

import android.content.Context;

public class ShotSprite extends Sprite {
    public SpaceInvadersView game;
    public ShotSprite(Context context,SpaceInvadersView game,int x,int y)
    {
        super(context,R.drawable.fire,x,y);//fire
        this.game=game;
        dy=-16;
    }
    public void move()
    {
        super.move();
        if(y<-100)
        game.removeSprite(this);
    }
    public void handleCollision(Sprite other)
    {
        if(other instanceof AlienSprite)
        {
            game.removeSprite(this);
            game.removeSprite(other);
        }
    }
}


//===========================================================================

//SpaceInvadersView.java
package com.example.hello;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.view.MotionEvent;
import android.view.SurfaceHolder;
import android.view.SurfaceView;

import java.util.ArrayList;

public class SpaceInvadersView extends SurfaceView implements  Runnable {

    Context context;
    Thread gameThread=null;
    SurfaceHolder ourHolder;
    volatile  boolean running;
    Canvas canvas;
    Paint paint;
    int screenW,screenH;

    ArrayList sprites=new ArrayList();
    Sprite starship;

    public SpaceInvadersView(Context context ,int x, int y)
    {
        super(context);
        this.context=context;
        ourHolder=getHolder();
        paint=new Paint();
        screenW=x;
        screenH=y;
        startGame();

    }

    public void initSprites()
    {
        starship=new StarShipSprite(context,this,screenW/2,screenH-400);
        sprites.add(starship);
        for(int y=0;y<3;y++)
        {
            for(int x=0;x<8;x++)
            {
                Sprite alien=new AlienSprite(context,this,100+(x*100),(50)+y*100);
                sprites.add(alien);
            }
        }
    }

    public void run()
    {
        while(running)
        {
            for(int i=0;i<sprites.size();i++)
            {
                Sprite sprite= (Sprite) sprites.get(i);
                sprite.move();
            }
            for(int p=0;p<sprites.size();p++)
            {
                for(int s=p+1;s<sprites.size();s++)
                {
                    Sprite me= (Sprite) sprites.get(p);
                    Sprite other= (Sprite) sprites.get(s);

                    if(me.checkCollision(other))
                    {
                        me.handleCollision(other);
                        other.handleCollision(me);
                    }
                }
            }
            draw();
            try {
                Thread.sleep(10);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }

        }
    }

    public void draw()
    {
        if(ourHolder.getSurface().isValid())
        {
            canvas=ourHolder.lockCanvas();
            canvas.drawColor(Color.BLUE);
            paint.setColor(Color.BLUE);
            for(int i=0;i<sprites.size();i++)
            {
                Sprite sprite= (Sprite) sprites.get(i);
                sprite.draw(canvas,paint);
            }
            ourHolder.unlockCanvasAndPost(canvas);
        }
    }

    public void startGame()
    {
        sprites.clear();
        initSprites();
    }
    public void endGame()
    {
        System.exit(0);
    }
    public void fire()
    {
        ShotSprite shot=new ShotSprite(context,this,starship.getX()+10,starship.getY()-30);
        sprites.add(shot);
    }

    public void removeSprite(Sprite sprite)
    {
        sprites.remove(sprite);
    }
    public void pause()
    {
        running=false;
        try {
            gameThread.join();
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
    }
    public void resume()
    {
        running=true;
        gameThread=new Thread(this);
        gameThread.start();
    }
    public boolean onTouchEvent(MotionEvent motionEvent)
    {
        int switchInt=motionEvent.getAction()&MotionEvent.ACTION_MASK;
        switch(switchInt)
        {
            case MotionEvent.ACTION_MOVE:
            case MotionEvent.ACTION_DOWN:
                if(motionEvent.getY()>screenH*4/5)
                    if(motionEvent.getX()>screenW/2)
                        starship.setDx(+10);
                    else
                        starship.setDx(-10);
                    if(motionEvent.getY()<=screenH*4/5)
                    {
                        fire();
                    }
                    break;
                    case MotionEvent.ACTION_CANCEL:
                    case MotionEvent.ACTION_UP:
                        starship.setDx(0);
                        break;
                }
                return true;
        }
    }


//===========================================================================
