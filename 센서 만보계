<!-- activity_main.xml -->
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    xmlns:tools="http://schemas.android.com/tools"
    android:orientation="vertical"
    android:gravity="top|center"
    tools:context=".MainActivity">

    <SeekBar
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:id="@+id/seekBar"
        android:layout_alignParentLeft="true"
        android:layout_alignParentStart="true"
        android:layout_marginTop="31dp"
        android:indeterminate="false"
        />
    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="t0"
        android:id="@+id/t0"
        />

    <TextView

        android:layout_weight="1"
        android:layout_width="wrap_content"
        android:layout_height="match_parent"
        android:text="t1"
        android:id="@+id/t1"
        />
    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="horizontal"
        android:gravity="center">

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:id="@+id/t2_1"
            android:layout_weight="1"
            android:text="t2_1"
            />


        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:id="@+id/t2_2"
            android:layout_weight="1"

            android:text="t2_2"
            />


        <TextView
            android:layout_width="wrap_content"
            android:layout_weight="1"

            android:layout_height="wrap_content"
            android:id="@+id/t2_3"
            android:text="t2_3"
            />

    </LinearLayout>
    <Button
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="reset counter"
        android:id="@+id/button"
        android:onClick="resetSteps"
        />


//===============================================


//MainActivity.java
package com.example.hello;

import android.hardware.Sensor;
import android.hardware.SensorEvent;
import android.hardware.SensorEventListener;
import android.hardware.SensorManager;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.SeekBar;
import android.widget.TextView;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;


public class MainActivity extends AppCompatActivity {

    TextView gx, gy, gz;
    TextView stepstextview, sensitivetextview;

    Button reset;

    SensorManager sensorManager;
    float acceleration;

    float previousY, currentY;
    int steps;

    SeekBar seekBar;
    int threshold;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        this.setContentView(R.layout.activity_main);

        gx = findViewById(R.id.t2_1);
        gy = findViewById(R.id.t2_2);
        gz = findViewById(R.id.t2_3);

        stepstextview = findViewById(R.id.t1);
        sensitivetextview = findViewById(R.id.t0);
        seekBar = findViewById(R.id.seekBar);
        seekBar.setProgress(10);
        seekBar.setOnSeekBarChangeListener(seekBarChangeListener);
        threshold = 10;
        sensitivetextview.setText(String.valueOf(threshold));

        previousY = currentY = steps = 0;
        acceleration = 0.0f;

        sensorManager = (SensorManager) getSystemService(SENSOR_SERVICE);
        sensorManager.registerListener(stepDetector, sensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER), SensorManager.SENSOR_DELAY_NORMAL);
    }

    public SensorEventListener stepDetector = new SensorEventListener() {
        @Override
        public void onSensorChanged(SensorEvent event) {
            float x = event.values[0];
            float y = event.values[1];
            float z = event.values[2];

            currentY = y;
            if (Math.abs(currentY - previousY) > threshold) {
                steps++;
                stepstextview.setText(String.valueOf(steps));
            }
            gx.setText(String.valueOf(x));
            gy.setText(String.valueOf(y));
            gz.setText(String.valueOf(z));

            previousY = y;
        }


        @Override
        public void onAccuracyChanged(Sensor sensor, int accuracy) {

        }};

        public void resetSteps(View v) {
            steps = 0;
            stepstextview.setText(String.valueOf(steps));

        }

        public SeekBar.OnSeekBarChangeListener seekBarChangeListener = new SeekBar.OnSeekBarChangeListener() {
            @Override
            public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
                threshold = seekBar.getProgress();
                sensitivetextview.setText(String.valueOf(threshold));
            }

            @Override
            public void onStartTrackingTouch(SeekBar seekBar) {

            }

            @Override
            public void onStopTrackingTouch(SeekBar seekBar) {

            }
        };
    }

